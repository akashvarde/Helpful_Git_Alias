#!/bin/sh
RED='\033[0;31m'     # Red color 
NC='\033[0m'          # No color (reset)
deployement_env=$1 # First parameter wtll be the DEPLOYEMENT ENV
currentBranch=$(git symbolic-ref --short -q HEAD) # Getting the current branch 
if [ ! -z "$1" ] # checking if the commtt message is present. If not then aborting. 
then 
   echo "Creating a deployement for $deployement_env"
   echo "Checkout to Deployement Branch" 
   git checkout $deployement_env || echo "Unable to checkout to $deployement_env , Check if all your changes are commited in current branch and if $deployement_env branch exist on your local git"
   formatted_date=$(date +"%d_%m_%Y_%H_%M_%S")
   echo "Creating new release branch RELEASE/$deployement_env/${currentBranch}_$formatted_date"
   git checkout -b RELEASE/$deployement_env/${currentBranch}_$formatted_date || echo "${RED}Unable to create release branch from $deployement_env ${NC}"
   echo "Pulling changes from origin/$deployement_env"
   git pull origin $deployement_env || echo "${RED}Unable to pull from remote origin/$deployement_env branch${NC}"
   echo "Pull successful..."
   echo "Merging changes from $currentBranch to Release branch..."
   merge_op=$(git merge $currentBranch)  
   echo "$merge_op"
   
else 
    echo "${RED}Deployement Branch not provided${NC}"
fi
